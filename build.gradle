/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7.1/samples
 */
buildscript {
    repositories {
        google()
    }
    ext {
        gradle_version = '3.5.0'
        kotlin_version = '1.5.32'
        minSdkVersion = 21
        compileSdkVersion = 30
        targetSdkVersion = 29
        buildToolsVersion = "29.0.2"
        bdp_panga_version = '0.0.2.5'
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0' // Android 插件版本号
    }
}

plugins {
    id "org.jetbrains.kotlin.android" version "1.6.21" apply false
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    // 其他配置信息
}

task createAar(type: Zip) {
    description = 'Create an empty AAR file'
    archiveFileName = "emptyLibrary.aar"
    destinationDir = file("$buildDir/test/aar")
    from("src/main/AndroidManifest.xml") {
        into "META-INF/"
    }
}

artifacts {
    archives(createAar)
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    publications {
        release(MavenPublication) {
            groupId 'engineer.lynx.test2'
            artifactId 'release-test'
            version '0.0.1-beta.5'
            artifact("$buildDir/test/aar/emptyLibrary.aar")
            pom {
                name = artifactId
                description = 'This is a sample project for engineer.lynx.test'
                url = 'https://github.com/lynx-infra/v8-build'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'gaohanqing'
                        email = '1277082377@qq.com'
                    }
                }
                scm {
                    url = 'https://github.com/lynx-infra/v8-build'
                    connection = 'scm:git:git://github.com/lynx-infra/v8-build.git'
                    developerConnection = 'scm:git:ssh://git@github.com:lynx-infra/v8-build.git'
                }
                signing {
                    def signingKeyId = findProperty("signing.keyId")
                    def signingPassword = findProperty("signing.password")
                    def signingSecretKey = findProperty("signing.secretKey")
                    useInMemoryPgpKeys(signingKeyId, signingSecretKey, signingPassword)
                    sign publishing.publications.release
                }
            }
        }
    }
    repositories {
        maven {
            url = "$buildDir/release"
        }
    }
}

// task accessPublishedArtifact(dependsOn: 'publishing') {
//     doLast {
//         def publishedArtifactPath = file("$buildDir/release/enginner")
//         if (publishedArtifactPath.isDirectory()) {
//             from 
//         } else {
//             println "Published artifact not found"
//         }
//     }
// }